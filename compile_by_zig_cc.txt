1. Make/CMake style way:

// Compile all source files one-by-one
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/utils.c.o -c src/utils.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/table.c.o -c src/table.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/scoreboard.c.o -c src/scoreboard.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/player.c.o -c src/player.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/game.c.o -c src/game.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/ball.c.o -c src/ball.c
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include -o zig_build/main.c.o -c src/main.c

// Link all object files and build the executable
zig cc -L/opt/homebrew/Cellar/raylib/4.5.0/lib -lraylib \
    -o zig_build/my-game \
    zig_build/utils.c.o \
    zig_build/table.c.o \
    zig_build/scoreboard.c.o \
    zig_build/player.c.o \
    zig_build/game.c.o \
    zig_build/ball.c.o \
    zig_build/main.c.o


2. Simple way: compile and build in one-shot

zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include \
    -L/opt/homebrew/Cellar/raylib/4.5.0/lib \
    -lraylib \
    -o zig_build/my-game \
    src/utils.c \
    src/table.c \
    src/scoreboard.c \
    src/player.c \
    src/game.c \
    src/ball.c \
    src/main.c

// linux target
zig cc -I/opt/homebrew/Cellar/raylib/4.5.0/include \
    -L/opt/homebrew/Cellar/raylib/4.5.0/lib \
    -lraylib \
    -target \
    aarch64-linux-gnu \
    -o zig_build/my-game-linux \
    src/utils.c \
    src/table.c \
    src/scoreboard.c \
    src/player.c \
    src/game.c \
    src/ball.c \
    src/main.c
